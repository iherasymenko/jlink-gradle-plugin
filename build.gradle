plugins {
    id 'java-gradle-plugin'
    id 'com.gradle.plugin-publish' version '1.2.1'
}

version = '0.7'
group = 'com.github.iherasymenko.jlink'

dependencies {
    testImplementation 'org.assertj:assertj-core:3.27.3'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.12.2'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

gradlePlugin {
    website = 'https://github.com/iherasymenko/jlink-gradle-plugin'
    vcsUrl = 'https://github.com/iherasymenko/jlink-gradle-plugin'
    plugins {
        jlink {
            displayName = 'jlink'
            id = 'com.github.iherasymenko.jlink'
            implementationClass = 'com.github.iherasymenko.jlink.JlinkApplicationPlugin'
            description = 'This plugins adds jlink integration to your Gradle builds. As simple as that.'
            tags.set(['java', 'jlink', 'jigsaw', 'modularity'])
        }
    }
}

tasks.named('compileJava', JavaCompile).configure { task ->
    task.options.release.set(11)
}

tasks.named('compileTestJava', JavaCompile).configure { task ->
    task.options.release.set(21)
}

tasks.withType(Test).configureEach { task ->
    task.useJUnitPlatform()
    // Required to test configuration cache in tests when using withDebug()
    // https://github.com/gradle/gradle/issues/22765#issuecomment-1339427241
    task.doFirst { it ->
        if (it.jvmArgs.find { arg -> arg.startsWith('-agentlib:jdwp=') }) {
            it.jvmArgs += [
                    "--add-opens",
                    "java.base/java.util=ALL-UNNAMED",
                    "--add-opens",
                    "java.base/java.util.concurrent.atomic=ALL-UNNAMED",
                    "--add-opens",
                    "java.base/java.lang.invoke=ALL-UNNAMED",
                    "--add-opens",
                    "java.base/java.net=ALL-UNNAMED",
            ]
        }
    }
}
